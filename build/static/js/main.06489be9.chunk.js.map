{"version":3,"sources":["assets/PushPin.png","logo.svg","components/molecules/MapSearch/MapSearch.js","reducers/map-reducer.js","reducers/config-reducer.js","reducers/index.js","reducers/default-reducer.js","actions/types.js","store.js","components/molecules/SidePanel/SidePanel.js","components/molecules/MapOverlayPanel/MapOverlayPanel.js","components/molecules/PopUp/PopUp.js","components/organisms/ReactMap.js","actions/index.js","App.config.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","MapSearch","props","state","searchWidget","self","this","loadModules","then","Search","GraphicsLayer","Graphic","PictureMarkerSymbol","webMercatorUtils","view","map","container","locationEnabled","resultGraphicEnabled","sources","get","set","setState","resultGL","add","draggingGraphic","tempGraphic","resultIcn","url","pinImg","height","width","on","event","resultG","geometry","webMercatorToGeographic","results","feature","symbol","graphics","resultPinDragable","evt","action","hitTest","resp","graphic","type","stopPropagation","remove","clone","toMap","newGraphic","className","Grid","spacing","alignitem","direction","justify","id","Component","initialState","clickCoordinates","centerpointCoordinates","config","rootReducers","combineReducers","default","payload","middleware","thunk","logger","ReduxPromise","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","SidePanel","update","e","onUpdate","target","value","fieldVal","handleClose","key","console","log","titleBarTitle","editAction","anchorEl","getPointerEvents","componentDidMount","sideNav","React","createRef","classes","pointerEvents","sidePanelClasses","textFieldClasses","textField","pointerEventsInactive","clickPointWatch","watch","getState","subscribe","newVal","oldVal","objectPath","clickPoint","coords","lat","lon","centerPointWatch","titleWatch","configTitle","configTest","title","hideSidePanel","splice","push","muiTheme","getMuiTheme","darkBaseTheme","Fade","in","timeout","Paper","join","appBar","iconElementLeft","color","aria-label","aria-owns","undefined","aria-haspopup","onClick","menuClick","Menu","open","Boolean","onChange","MenuItem","withStyles","theme","position","marginLeft","marginRight","pointerEventsActive","paper","paddingTop","paddingBottom","maxWidth","paddingLeft","typeTitle","addButton","palette","getContrastText","green","backgroundColor","deleteButton","red","extendedIcon","MapOverlayPanel","setProjectCallback","project","projectCallback","setPhaseCallback","phase","phaseCallback","componentDidUpdate","alignItems","ref","PopUp","generate","element","cloneElement","popupData","parcelData","data","JSON","stringify","subHeader","parentDiv","List","list","subheader","Object","keys","label","listSection","ul","ListSubheader","disableGutters","disableSticky","item","ListItem","ListItemText","primary","background","overflow","padding","fontSize","ReactMap","loadMap","loadedModules","Map","MapView","containerNode","center","zoom","basemap","when","mapView","mapClick","mapCenter","popup","highlightEnabled","actions","setReactPopupContent","puNode","document","createElement","content","ReactDOM","render","mapPoint","latitude","toFixed","toString","longitude","updateMapclickCoordinates","updateCenterpointCoordinates","ctrlKey","realEstateData","bind","addEventListener","options","modulesToLoad","onReady","hideSidePanel_MapOverlay","PureComponent","connect","coordData","dispatch","App","defaultFunction","setConfig","isLocalhost","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","getElementById","URL","process","origin","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"uIAAAA,EAAOC,QAAU,IAA0B,qC,gFCA3CD,EAAOC,QAAU,IAA0B,kC,4UC+H5BC,E,YAvHb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACTC,aAAc,MAHF,E,kFAWhB,IAAMC,EAAOC,KACbC,sBAAY,CAAC,sBAAuB,4BAA6B,eAAgB,mCAAoC,yCAA0C,uBAAuBC,MAAK,YAAuF,IAAD,mBAApFC,EAAoF,KAA5EC,EAA4E,KAA7DC,EAA6D,KAApDC,EAAoD,KAA/BC,EAA+B,UAE7Q,GAA6B,MAAzBR,EAAKF,MAAMC,cAAqC,MAAjBC,EAAKH,MAAMY,MAAiC,MAArBT,EAAKH,MAAMY,KAAKC,IAAU,CACpF,IAAMD,EAAOT,EAAKH,MAAMY,KACpBV,EAAe,IAAIK,EAAO,CAC5BK,KAAMA,EACJE,UAAW,eACXC,iBAAiB,EACjBC,sBAAsB,IAGtBC,EAAUf,EAAagB,IAAI,WAW/BhB,EAAaiB,IAAI,UAAWF,GAE5Bd,EAAKiB,SAAS,CAAClB,aAAaA,IAC5B,IAAImB,EAAW,IAAIb,EACnBL,EAAKH,MAAMY,KAAKC,IAAIS,IAAID,GACxB,IAWQE,EACAC,EAZJC,EAAY,IAAIf,EAAoB,CAACgB,IAAIC,IAAQC,OAAQ,OAAQC,MAAO,SAU5E,GARA3B,EAAa4B,GAAG,mBAAmB,SAASC,GAC1C,IAAIC,EAAU,IAAIvB,EAAQ,CACEwB,SAAUtB,EAAiBuB,wBAAwBH,EAAMI,QAAQ,GAAGA,QAAQ,GAAGC,QAAQH,UACvFI,OAAQZ,IAEpCJ,EAASiB,SAAShB,IAAIU,MAGW,GAAhC7B,EAAKH,MAAMuC,kBAGV3B,EAAKkB,GAAG,QAAQ,SAASU,GAEvB,GAAmB,UAAfA,EAAIC,OACN7B,EAAK8B,QAAQF,GAAKlC,MAAK,SAAAqC,GACjBA,EAAKR,QAAQ,GAAGS,SAAqD,UAA1CD,EAAKR,QAAQ,GAAGS,QAAQX,SAASY,OAC9DL,EAAIM,kBAEJvB,EAAkBoB,EAAKR,QAAQ,GAAGS,iBAGjC,GAAmB,WAAfJ,EAAIC,OAETlB,IACFiB,EAAIM,kBAEAtB,EACFH,EAAS0B,OAAOvB,GAGhBH,EAAS0B,OAAOxB,IAGlBC,EAAcD,EAAgByB,SAClBf,SAAWrB,EAAKqC,MAAMT,GAClCnB,EAASC,IAAIE,SAGV,GAAmB,QAAfgB,EAAIC,QAETlB,EAAgB,CAClBiB,EAAIM,kBAEAtB,GAAaH,EAAS0B,OAAOvB,GAEjC,IAAI0B,EAAa3B,EAAgByB,QACjCE,EAAWjB,SAAWT,EAAYS,SAASe,QAG3C3B,EAASC,IAAI4B,GAGb3B,EAAkB,KAClBC,EAAc,e,+BAS5B,OACE,yBAAK2B,UAAU,aACb,kBAACC,EAAA,EAAD,CACEtC,WAAS,EACTuC,QAAS,GACTC,UAAU,SACVC,UAAU,MACVC,QAAQ,UAER,yBAAKC,GAAG,uB,GAjHMC,a,sOCIlBC,EAAe,CACjBC,iBAAkB,YAClBC,uBAAwB,WCLtBF,EAAe,CACjBG,OAAQ,ICKGC,EAPMC,YAAgB,CAEjCC,QCJW,WAAyB,IAAxBhE,EAAuB,uDAAf,GAAIwC,EAAW,uCACnC,OAAOA,EAAOI,MACV,ICGkB,aDFd,OAAOJ,EAAOyB,QAClB,QACI,OAAOjE,IDAfY,IFKW,WAAmC,IAAlCZ,EAAiC,uDAAzB0D,EAAclB,EAAW,uCAC7C,OAAOA,EAAOI,MACV,IIVmC,8BJW/B,OAAO,eACA5C,EADP,CAEI2D,iBAAkBnB,EAAOyB,UAEjC,IIdsC,iCJelC,OAAO,eACAjE,EADP,CAEI4D,uBAAwBpB,EAAOyB,UAEvC,QACI,OAAOjE,IEjBf6D,ODAW,WAAmC,IAAlC7D,EAAiC,uDAAzB0D,EAAclB,EAAW,uCAC7C,OAAOA,EAAOI,MACV,IGJkB,aHKd,OAAO,eACA5C,EADP,CAEI6D,OAAQrB,EAAOyB,UAEvB,QACI,OAAOjE,M,oCIVbkE,EAAa,CAACC,IAAOC,IAAQC,KAWpBC,GAVDC,YACVC,EAHiB,GAKjBC,YACIC,IAAe,WAAf,EAAmBR,GAEfS,OAAOC,8BAAgCD,OAAOC,iC,oBCW1D,IAiDMC,G,YACF,WAAY9E,GAAO,IAAD,uBACd,4CAAMA,KAgDV+E,OAAS,SAACC,GACN,EAAKhF,MAAMiF,SAASD,EAAEE,OAAOC,OAC7B,EAAK/D,SAAS,CAACgE,SAAUJ,EAAEE,OAAOC,SAnDpB,EAqDlBE,YAAc,SAAAC,GAAG,OAAI,SAAAN,GACjBO,QAAQC,IAAI,QAAUF,GACd,QAARA,EAAe,EAAKlE,SAAS,CAACqE,cAAe,gBAAkB,EAAKrE,SAAS,CAACqE,cAAe,mBAC7F,EAAKrE,SAAS,CAACsE,WAAWJ,IAC1B,EAAKlE,SAAS,CAACuE,SAAW,SAzDZ,EA2DlBC,iBAAmB,WACf,OAAO,GA5DO,EA8DlBC,kBAAoB,WAChB,EAAKC,QAAUC,IAAMC,aA/DP,IAGNC,EAAY,EAAKjG,MAAjBiG,QACR,EAAKhG,MAAQ,CACTiG,cAAe,OACfC,iBAAkB,CAAC,YAAa,yBAChCC,iBAAkB,CAACH,EAAQI,UAAWJ,EAAQK,wBAGlD,EAAKR,QAAUC,IAAMC,YAUrB,IAAMO,EAAkBC,KAAMjC,GAAMkC,SAAU,wBAC9ClC,GAAMmC,UAAUH,GAAgB,SAACI,EAAQC,EAAQC,GAC7C,IAAMC,EAAavC,GAAMkC,WAAW5F,IAAI+C,iBAClCmD,EAASJ,EAAOK,IAAM,IAAML,EAAOM,IACzC1B,QAAQC,IAAIsB,GACZ,EAAK1F,SAAS,CACVwC,iBAAkBmD,QAG1B,IAAMG,EAAmBV,KAAMjC,GAAMkC,SAAU,8BAC/ClC,GAAMmC,UAAUQ,GAAiB,SAACP,EAAQC,EAAQC,GAC1BtC,GAAMkC,WAAW5F,IAAIgD,uBAAzC,IACMkD,EAASJ,EAAOK,IAAM,IAAML,EAAOM,IACzC,EAAK7F,SAAS,CACVyC,uBAAwBkD,QAKhC,IAAMI,EAAaX,KAAMjC,GAAMkC,SAAU,uBAvC3B,OAwCdlC,GAAMmC,UAAUS,GAAW,SAACR,EAAQC,EAAQC,GACxCtB,QAAQC,IAAI,8BAA+BmB,EAAS,IAAMC,GAC1D,EAAKxF,SAAS,CACVgG,YAAaT,QAGrB,EAAKU,WAAa9C,GAAMkC,WAAW3C,OAAOA,OAAOwD,MACjD/B,QAAQC,IAAI,oBAAsB,EAAK6B,YA/CzB,E,kFAkEMjH,KAAKJ,MAAjBiG,QACJ7F,KAAKJ,MAAMuH,eAAiBnH,KAAKH,MAAMkG,mBAAqB,CAAC,YAAa,uBAIrE/F,KAAKJ,MAAMuH,eAAiBnH,KAAKH,MAAMkG,mBAAqB,CAAC,YAAa,2BAC/E/F,KAAKH,MAAMkG,iBAAiBqB,QAAQ,EAAG,GACvCpH,KAAKH,MAAMkG,iBAAiBsB,KAAK,2BALjCrH,KAAKH,MAAMkG,iBAAiBqB,QAAQ,EAAG,GACvCpH,KAAKH,MAAMkG,iBAAiBsB,KAAK,0B,+BAO/B,IACExB,EAAY7F,KAAKJ,MAAjBiG,QACR,OACA,kBAAC,IAAD,CAAkByB,SAAUC,IAAYC,MAEpC,6BACI,kBAACC,EAAA,EAAD,CAAMC,IAAK1H,KAAKJ,MAAMuH,cAAeQ,QAAS,KAC1C,kBAACC,EAAA,EAAD,CAAO7E,UAAW/C,KAAKH,MAAMkG,iBAAiB8B,KAAK,MAC/C,kBAAC,IAAD,CAAQ9E,UAAW8C,EAAQiC,OAAQZ,MAAOlH,KAAKH,MAAMwF,cAAe0C,gBAChE,kBAAC,IAAD,CAAYC,MAAM,UAAUC,aAAW,OACnCC,YAAWlI,KAAKH,MAAM0F,SAAW,mBAAgB4C,EACjDC,gBAAc,OACdC,QAASrI,KAAKsI,WACd,kBAAC,IAAD,QAGR,kBAACC,EAAA,EAAD,CAAMlF,GAAG,cAAckC,SAAUvF,KAAKH,MAAM0F,SAAUiD,KAAMC,QAAQzI,KAAKH,MAAM0F,UAAWmD,SAAU1I,KAAKiF,aACrG,kBAAC0D,EAAA,EAAD,CAAUN,QAASrI,KAAKiF,YAAY,QAApC,OACA,kBAAC0D,EAAA,EAAD,CAAUN,QAASrI,KAAKiF,YAAY,WAApC,YAGJ,4BAAKjF,KAAKH,MAAMmH,aAChB,mDAAyBhH,KAAKH,MAAM4D,wBACpC,6CAAmBzD,KAAKH,MAAM2D,0B,GApG9BF,aA+GTsF,QAhKA,SAAAC,GAAK,MAAK,CAIrBf,OAAQ,CACNgB,SAAU,YAEV7C,UAAW,CACT8C,WAAYF,EAAM5F,UAClB+F,YAAaH,EAAM5F,WAErBgG,oBAAqB,CACnBnD,cAAe,QAEjBI,sBAAuB,CACrBJ,cAAe,QAEjBoD,MAAO,CACLC,WAA8B,EAAlBN,EAAM5F,UAClBmG,cAAiC,EAAlBP,EAAM5F,WAEvBR,KAAM,CACJhB,MAAO,OACP4H,SAAU,IACVC,YAAa,IAEfC,UAAW,CACTJ,WAAY,GAEdK,UAAW,CACTxB,MAAOa,EAAMY,QAAQC,gBAAgBC,IAAM,MAC3CC,gBAAiBD,IAAM,KACvB,UAAW,CACPC,gBAAiBD,IAAM,OAG7BE,aAAc,CACZ7B,MAAOa,EAAMY,QAAQC,gBAAgBI,IAAI,MACzCF,gBAAiBE,IAAI,KACrB,UAAW,CACPF,gBAAiBE,IAAI,OAG3BC,aAAc,CACZf,YAA6B,EAAhBH,EAAM5F,cAoHZ2F,CAAmBlE,IC5InBsF,I,mBAxCb,WAAYpK,GAAO,IAAD,8BAChB,4CAAMA,KAIRqK,mBAAqB,SAAClF,GAEpBI,QAAQC,IAAI,EAAKvF,MAAMqK,SACvB,EAAKtK,MAAMuK,gBAAgBpF,IARX,EAUlBqF,iBAAmB,SAACrF,GAElBI,QAAQC,IAAI,EAAKvF,MAAMwK,OACvB,EAAKzK,MAAM0K,cAAcvF,IAbT,EAelBwF,mBAAqB,aAbnB,EAAK1K,MAAQ,GAFG,E,sEAkBhB,OACE,yBAAKkD,UAAU,mBACb,kBAACC,EAAA,EAAD,CACEtC,WAAS,EACTuC,QAAS,GACTuH,WAAW,SACXrH,UAAU,MACVC,QAAQ,UAER,kBAAC,EAAD,CACE5C,KAAMR,KAAKJ,MAAMY,KACjB2B,mBAAmB,IAErB,kBAAC,GAAD,CAAWsI,IAAI,YACbtD,cAAenH,KAAKJ,MAAMuH,sB,GAjCR7D,c,gDC2BxBoH,G,2MACFH,mBAAqB,WACjBpF,QAAQC,IAAI,uB,EAEhBuF,SAAW,SAACC,GACR,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGnK,KAAI,SAAAsE,GAAK,OAClCY,IAAMkF,aAAaD,EAAS,CAC5B1F,IAAKH,Q,sEAINnF,GAAQ,IACLiG,EAAY7F,KAAKJ,MAAjBiG,QAERV,QAAQC,IAAI,eACZ,IAAM0F,EAAY,GAelB,OAdAA,EAAUC,WAAa,CAAC,MAAS,eAAgB,KAHpC/K,KAGgDJ,MAAMoL,MAEnE7F,QAAQC,IAAI,cAAgB6F,KAAKC,UAAUJ,IAC3C3F,QAAQC,IAAI,sBAAwB6F,KAAKC,UAAUrF,EAAQsF,YAYzD,yBAAKpI,UAAW8C,EAAQuF,WACpB,kBAACC,GAAA,EAAD,CAAMtI,UAAW8C,EAAQyF,KAAMC,UAAW,8BACrCC,OAAOC,KAAKX,GAAWrK,KAAI,SAAAgC,GAAI,OAE5B,wBAAIyC,IAAG,kBAAa4F,EAAUrI,GAAMiJ,OAAS3I,UAAW8C,EAAQ8F,aACnB,MAAxCV,KAAKC,UAAUJ,EAAUrI,GAAMuI,OAC5B,wBAAIjI,UAAW8C,EAAQ+F,IACnB,kBAACC,GAAA,EAAD,CAAeC,gBAAc,EAACC,eAAa,EAAChJ,UAAW8C,EAAQsF,WAA/D,UAA8EL,EAAUrI,GAAMiJ,QAC7FF,OAAOC,KAAKX,EAAUrI,GAAMuI,MAAMvK,KAAI,SAAAuL,GAAI,OAC3C,kBAACC,GAAA,EAAD,CAAU/G,IAAG,eAAU4F,EAAUrI,GAAMiJ,MAA1B,YAAmCM,IAC5C,kBAACE,GAAA,EAAD,CAAcC,QAAO,UAAKH,EAAL,cAAelB,EAAUrI,GAAMuI,KAAKgB,qB,GAzCzErG,IAAMrC,WAgFXsF,iBAzGA,SAAAC,GAAK,MAAK,CACrBuC,UAAW,CACP3J,MAAO,OACPD,OAAS,QAEb8J,KAAM,CACF7J,MAAO,OACPD,OAAS,OACToI,gBAAiBf,EAAMY,QAAQ2C,WAAWlD,MAC1CJ,SAAU,WACVuD,SAAU,QAEdV,YAAa,CACT/B,gBAAiB,WAErBgC,GAAI,CACAhC,gBAAiB,UACjB0C,QAAS,GAEbnB,UAAW,CACPoB,SAAS,OACT3C,gBAAgB,cAoFThB,CAAmB8B,IClG5B8B,I,mBACJ,WAAY5M,GAAO,IAAD,8BAChB,4CAAMA,KAwBR6M,QAAU,YAA8F,IAAD,gBAA3FC,cAA2F,GAA3EC,EAA2E,KAAtEC,EAAsE,KAAnBC,GAAmB,iBAAnBA,eAC5E9M,EAAI,eAID,IAAI6M,EAAQ,CACnBlM,UAAWmM,EACTC,OAAQ,EAAE,SAAU,UACpBC,KAAM,GACNtM,IANM,IAAIkM,EAAI,CAACK,QAAS,gBAOzBC,MAAM,SAASC,GACdnN,EAAKiB,SAAS,CAACkM,QAAQA,IACvBA,EAAQxL,GAAG,QAAS3B,EAAKoN,UAEzBD,EAAQ9G,MAAM,SAAUrG,EAAKqN,WAE7BF,EAAQG,MAAMC,kBAAmB,EACjCJ,EAAQG,MAAME,QAAU,GACxBL,EAAQG,MAAMjH,MAAM,WAAW,SAASxB,GACnCA,GAAG7E,EAAKyN,8BA5CD,EAiDlBA,qBAAuB,WACrB,IAAMzN,EAAI,eAEN0N,EAASC,SAASC,cAAc,OACpC5N,EAAKF,MAAMqN,QAAQG,MAAMO,QAAUH,EAEnCI,IAASC,OACP,kBAAC,GAAD,CAAO9C,KAAMjL,EAAKF,MAAMmL,OACxByC,IAzDc,EA6DlBN,SAAW,SAACvI,GACRO,QAAQC,IAAI,8BAAgC6F,KAAKC,UAAUtG,EAAEmJ,WAC7D,IAAMpH,EAAS,CAAEC,IAAKhC,EAAEmJ,SAASC,SAASC,QAAQ,GAAGC,WAAYrH,IAAKjC,EAAEmJ,SAASI,UAAUF,QAAQ,GAAGC,YACtG,EAAKtO,MAAMwO,0BAA0BzH,IAhEvB,EAkElByG,UAAY,SAACxI,GAEX,IAAM+B,EAAS,CAAEC,IAAKhC,EAAEkI,OAAOkB,SAAUnH,IAAKjC,EAAEkI,OAAOqB,WAKvDhJ,QAAQC,IAAI,gBAAiBR,GAC7B,EAAKhF,MAAMyO,6BAA6B1H,IAxExC,EAAK9G,MAAQ,CACXyO,SAAS,EACPpB,QAAS,KACT/F,eAAe,EAEfoH,eAAgB,MAEpB,EAAKpB,SAAW,EAAKA,SAASqB,KAAd,gBAChB,EAAK/B,QAAU,EAAKA,QAAQ+B,KAAb,gBAVC,E,iFAahBd,SAASe,iBAAiB,WAG1B,SAAiB7J,GACXA,EAAE0J,UAAUvO,EAAKF,MAAMyO,SACzBvO,EAAKiB,SAAS,CAACsN,SAAS,OAJ5BZ,SAASe,iBAAiB,SAO1B,SAAe7J,GACT7E,EAAKF,MAAMyO,SAASvO,EAAKiB,SAAS,CAACsN,SAAS,OAPlD,IAAMvO,EAAOC,O,+BAyEb,OACE,yBAAK+C,UAAU,cACb,kBAAC,IAAD,CACE2L,QAPU,CACdpN,IAAK,+BAODqN,cAAe,CAAC,WAAY,qBAAqB,2BAA4B,4BAA6B,wBAC1GC,QAAS5O,KAAKyM,UAEhB,kBAAC,GAAD,CACEjM,KAAMR,KAAKH,MAAMqN,QACjB/K,mBAAmB,EACnBgF,eAAe,EACf0H,yBAA0B7O,KAAKH,MAAMsH,qB,GApGxBxB,IAAMmJ,gBAgHdC,eAAQ,KAAM,CAAEX,0BC1HU,SAACY,GAEtC,OAAO,SAAAC,GACHA,EAAS,CACLxM,KNF+B,8BMG/BqB,QAASkL,MDqHqCX,6BCjHd,SAACW,GAEzC,OAAO,SAAAC,GACHA,EAAS,CACLxM,KNVkC,iCMWlCqB,QAASkL,OD4GND,CAA2EvC,IE5H3E9I,GAHA,CACXwD,MAAO,cCULgI,G,YACJ,WAAYtP,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACX6D,OAAQA,IAHM,E,iFAQhB1D,KAAKJ,MAAMuP,kBACXnP,KAAKJ,MAAMwP,UAAU1L,M,+BAIrB,OADAyB,QAAQC,IAAI,kBAAmB1B,IAE7B,6BAEE,kBAAC,GAAD,CAAUA,OAAQ1D,KAAKH,MAAM6D,c,GAjBnBJ,aA8BHyL,oBANf,SAAyBlP,GACvB,MAAO,CACLgE,QAAShE,EAAMgE,WAIqB,CAAEsL,gBFTnC,WAKH,OAJAhK,QAAQC,IAAI,mBAIL,CACH3C,KN5BkB,aM6BlBqB,QALU,UEOyCsL,UFlBlC,SAAC1L,GACtB,OAAO,SAAAuL,GACHA,EAAS,CACLxM,KNjBc,aMkBdqB,QAASJ,OEcNqL,CAAyDG,IC/BlEG,GAAc5G,QACW,cAA7BjE,OAAO8K,SAASC,UAEe,UAA7B/K,OAAO8K,SAASC,UAEhB/K,OAAO8K,SAASC,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTxP,MAAK,SAAA4P,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnQ,QACf8P,UAAUC,cAAcO,WAK1BhL,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBgL,OAAM,SAAAC,GACLlL,QAAQkL,MAAM,4CAA6CA,MC1DjExC,IAASC,OACL,kBAAC,IAAD,CAAU3J,MAAOA,IACb,kBAAC,GAAD,OAEFuJ,SAAS4C,eAAe,SDIf,WACb,GAA6C,kBAAmBX,UAAW,CAGzE,GADkB,IAAIY,IAAIC,GAAwBhM,OAAO8K,UAC3CmB,SAAWjM,OAAO8K,SAASmB,OAIvC,OAGFjM,OAAOiK,iBAAiB,QAAQ,WAC9B,IAAMiB,EAAK,UAAMc,GAAN,sBAEPnB,GAwCV,SAAiCK,GAE/BgB,MAAMhB,GACHxP,MAAK,SAAAyQ,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQ/P,IAAI,gBAAgBgQ,QAAQ,cAG7CnB,UAAUC,cAAcmB,MAAM7Q,MAAK,SAAA4P,GACjCA,EAAakB,aAAa9Q,MAAK,WAC7BsE,OAAO8K,SAAS2B,eAKpBxB,GAAgBC,MAGnBU,OAAM,WACLjL,QAAQC,IACN,oEA5DA8L,CAAwBxB,GAGxBD,GAAgBC,OCtBxByB,K","file":"static/js/main.06489be9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PushPin.d22b5a3d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component, Fragment } from 'react'\nimport { loadModules } from 'esri-loader'\nimport './MapSearch.css'\n\nimport pinImg from '../../../assets/PushPin.png'\n\nimport Grid from '@material-ui/core/Grid'\nclass MapSearch extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n        searchWidget: null\n    }\n  }\n  // componentDidUpdate() {\n  //     console.log('MapSearchDidMount')\n  // }\n  componentDidUpdate() {\n    //console.log('MapSearchDidUpdate')\n    const self = this\n    loadModules(['esri/widgets/Search', 'esri/layers/GraphicsLayer', 'esri/Graphic', 'esri/symbols/PictureMarkerSymbol', 'esri/geometry/support/webMercatorUtils', 'esri/tasks/Locator']).then(([Search, GraphicsLayer, Graphic, PictureMarkerSymbol, webMercatorUtils, Locator]) => {\n      \n        if (self.state.searchWidget==null&&self.props.view!=null&&self.props.view.map!=null){\n        const view = self.props.view;\n        let searchWidget = new Search({\n          view: view\n          , container: 'searchWidget'\n          , locationEnabled: false\n          , resultGraphicEnabled: false\n          //, popupEnabled: false\n        })\n        var sources = searchWidget.get('sources');\n        // sources.push({\n        //     //Pass in the custom locator to the sources\n        //     locator: new Locator(\"https://maps.townofcary.org/arcgis1/rest/services/Locators/Cary_Com_Locator/GeocodeServer\"),\n        //     singleLineFieldName: \"SingleLine\",\n        //     outFields: [\"*\"],\n        //     name: \"ToC Locator\",\n        //     autoNavigate: true,\n        //     maxSuggestions: 3,\n        //     placeholder: \"example: 120 Wilkinson Ave\"\n        // })\n        searchWidget.set('sources', sources)\n        \n        self.setState({searchWidget:searchWidget})  \n        let resultGL = new GraphicsLayer()\n        self.props.view.map.add(resultGL)\n        let resultIcn = new PictureMarkerSymbol({url:pinImg, height: '48px', width: '48px'})\n        \n        searchWidget.on('search-complete', function(event) {\n          let resultG = new Graphic({\n                                      geometry: webMercatorUtils.webMercatorToGeographic(event.results[0].results[0].feature.geometry), \n                                      symbol: resultIcn\n                                    });\n          resultGL.graphics.add(resultG)\n        })\n\n        if(self.props.resultPinDragable == true){\n            let draggingGraphic;\n            let tempGraphic;\n            view.on(\"drag\", function(evt) {       \n              // if this is the starting of the drag, do a hitTest\n              if (evt.action === 'start'){\n                view.hitTest(evt).then(resp => {\n                  if (resp.results[0].graphic && resp.results[0].graphic.geometry.type === 'point'){\n                    evt.stopPropagation();\n                    // if the hitTest returns a point graphic, set dragginGraphic\n                    draggingGraphic = resp.results[0].graphic;\n                  }\n                });\n              } else if (evt.action === 'update'){\n                // on drag update events, only continue if a draggingGraphic is set\n                if (draggingGraphic){\n                  evt.stopPropagation();\n                  // if there is a tempGraphic, remove it\n                  if (tempGraphic) {\n                    resultGL.remove(tempGraphic);\n                  } else {\n                    // if there is no tempGraphic, this is the first update event, so remove original graphic\n                    resultGL.remove(draggingGraphic);\n                  }\n                  // create new temp graphic and add it\n                  tempGraphic = draggingGraphic.clone();\n                  tempGraphic.geometry = view.toMap(evt);\n                  resultGL.add(tempGraphic);\n                }\n                \n              } else if (evt.action === 'end'){\n                // on drag end, continue only if there is a draggingGraphic\n                if (draggingGraphic){\n                  evt.stopPropagation();\n                  // rm temp\n                  if (tempGraphic) resultGL.remove(tempGraphic);\n                  // create new graphic based on original dragging graphic\n                  let newGraphic = draggingGraphic.clone();\n                  newGraphic.geometry = tempGraphic.geometry.clone();\n                  \n                  // add replacement graphic\n                  resultGL.add(newGraphic);\n                  \n                  // reset vars\n                  draggingGraphic = null;\n                  tempGraphic = null; \n                }\n              }    \n            });\n          }\n      }\n    })\n  }\n  render() {\n    return (\n      <div className=\"mapSearch\">\n        <Grid\n          container\n          spacing={10}\n          alignitem=\"center\"\n          direction=\"row\"\n          justify=\"center\"\n        >\n          <div id=\"searchWidget\" />\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default MapSearch","/********************************************************************************************\nMAPVIEW-REDUCER\nHandles events from the MapView.\nUPDATE_MAPCLICK_COORDINATES - fired when the map is clicked \nUPDATE_CENTERPOINT_COORDINATES - fired when the map extent changes to update the centerpoint. \n********************************************************************************************/\n\n\n\nimport { UPDATE_MAPCLICK_COORDINATES, UPDATE_CENTERPOINT_COORDINATES } from '../actions/types';\n\nconst initialState = {\n    clickCoordinates: 'click map',\n    centerpointCoordinates: 'pan map',\n}\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case UPDATE_MAPCLICK_COORDINATES:\n            return {\n                ...state, \n                clickCoordinates: action.payload,\n            };\n        case UPDATE_CENTERPOINT_COORDINATES:\n            return {\n                ...state,\n                centerpointCoordinates: action.payload,\n            }\n        default:\n            return state;\n    }\n}","/********************************************************************************************\nCONFIG-REDUCER\nDistributes the application config.\nSET_CONFIG - sets the config \n********************************************************************************************/\n\nimport { SET_CONFIG } from '../actions/types';\n\nconst initialState = {\n    config: '',\n}\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case SET_CONFIG:\n            return {\n                ...state, \n                config: action.payload,\n            };\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\n\n// calling the default reducer to create a link\nimport defaultReducer from './default-reducer';\nimport mapReducer from './map-reducer';\nimport configReducer from './config-reducer';\n\nconst rootReducers = combineReducers({\n    // add reducer files references here\n    default: defaultReducer, \n    map: mapReducer,\n    config: configReducer,\n});\n\nexport default rootReducers;","// default reducer\n// Note: You can remove this reducer and create your own reducer\n\nimport { FETCH_DATA } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch(action.type) {\n        case FETCH_DATA:\n            return action.payload;\n        default:\n            return state;\n    }\n}","\n\n\n\n\n\n\nexport const UPDATE_MAPCLICK_COORDINATES = 'UPDATE_MAPCLICK_COORDINATES';\nexport const UPDATE_CENTERPOINT_COORDINATES = 'UPDATE_CENTERPOINT_COORDINATES';\nexport const SET_CONFIG = 'SET_CONFIG';\nexport const FETCH_DATA = 'fetch_data';\n","\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport logger from 'redux-logger';\nimport ReduxPromise from 'redux-promise';\n\n\nconst initialState = {};\nconst middleware = [thunk, logger, ReduxPromise];\nconst store = createStore(\n    rootReducer, \n    initialState, \n    compose(\n        applyMiddleware(...middleware),\n            //turn on redux devtools\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()    \n        )\n    );\n\nexport default store;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport darkBaseTheme from 'material-ui/styles/baseThemes/darkBaseTheme';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport IconButton from 'material-ui/IconButton';\n// import FloatingActionButton from 'material-ui/FloatingActionButton';\n// import NavigationClose from 'material-ui/svg-icons/navigation/close';\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport AppBar from 'material-ui/AppBar';\nimport Fade from '@material-ui/core/Fade';\nimport Paper from '@material-ui/core/Paper';\nimport './SidePanel.css';\n\nimport store from '../../../store'\nimport watch from 'redux-watch';\n\nfunction getPointerEvents(){\n    return true\n}\nconst styles = theme => ({\n    // root:{\n    //     pointerEvents: this.getPointerEvents\n    // },\n    appBar: {\n      position: 'relative',\n    }\n    , textField: {\n        marginLeft: theme.spacing(),\n        marginRight: theme.spacing(),\n    }\n    , pointerEventsActive: {\n        pointerEvents: 'auto'\n    }\n    , pointerEventsInactive: {\n        pointerEvents: 'none'\n    }\n    , paper: {\n        paddingTop: theme.spacing() * 2,\n        paddingBottom: theme.spacing() * 2,\n    }\n    , type: {\n        width: '100%',\n        maxWidth: 500,\n        paddingLeft: 15\n    }\n    , typeTitle: {\n        paddingTop: 5\n    }\n    , addButton: {\n        color: theme.palette.getContrastText(green[500]),\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    }\n    , deleteButton: {\n        color: theme.palette.getContrastText(red[500]),\n        backgroundColor: red[500],\n        '&:hover': {\n            backgroundColor: red[700],\n        },\n    }\n    , extendedIcon: {\n        marginRight: theme.spacing()*2,\n    }\n\n  });\n\nclass SidePanel extends Component {\n    constructor(props){\n        super(props);\n        \n        const { classes } = this.props;\n        this.state = {\n            pointerEvents: 'auto',\n            sidePanelClasses: ['sidePanel', 'pointerEventsInactive'],\n            textFieldClasses: [classes.textField, classes.pointerEventsInactive],\n        };\n        \n        this.sideNav = React.createRef();\n        // store.subscribe(() => {\n        //     console.log(store.getState())\n        //     const clickPoint = store.getState().map.clickCoordinates;\n        //     const coords = clickPoint.lat + ' ' + clickPoint.lon;\n        //     console.log(clickPoint)\n        //     this.setState({\n        //         clickCoordinates: coords\n        //     })\n        // });\n        const clickPointWatch = watch(store.getState, 'map.clickCoordinates')\n        store.subscribe(clickPointWatch((newVal, oldVal, objectPath) => {\n            const clickPoint = store.getState().map.clickCoordinates;\n            const coords = newVal.lat + ' ' + newVal.lon;\n            console.log(clickPoint)\n            this.setState({\n                clickCoordinates: coords\n            })\n        }))\n        const centerPointWatch = watch(store.getState, 'map.centerpointCoordinates')\n        store.subscribe(centerPointWatch((newVal, oldVal, objectPath) => {\n            const centerpoint = store.getState().map.centerpointCoordinates;\n            const coords = newVal.lat + ' ' + newVal.lon;\n            this.setState({\n                centerpointCoordinates: coords,\n            })\n        }))\n\n\n        const titleWatch = watch(store.getState, 'config.config.title')\n        store.subscribe(titleWatch((newVal, oldVal, objectPath) => {\n            console.log('title new val and old val: ', newVal + ' ' + oldVal);\n            this.setState({\n                configTitle: newVal,\n            })\n        }))\n        this.configTest = store.getState().config.config.title;\n        console.log('this.configTest: ',  this.configTest);\n    }\n    update = (e) => {\n        this.props.onUpdate(e.target.value);\n        this.setState({fieldVal: e.target.value});\n    };\n    handleClose = key => e => {\n        console.log('key: ' + key) \n        key === 'add'? this.setState({titleBarTitle: 'Add Project'}) : this.setState({titleBarTitle: 'Remove Project'})\n        this.setState({editAction:key})\n        this.setState({anchorEl : null})\n    }\n    getPointerEvents = () => {\n        return true\n    }\n    componentDidMount = () => {\n        this.sideNav = React.createRef();\n    }\n    componentDidUpdate() {\n        const { classes } = this.props;\n        if(!this.props.hideSidePanel && this.state.sidePanelClasses !== ['sidePanel', 'pointerEventsActive']){\n            this.state.sidePanelClasses.splice(-1, 1)\n            this.state.sidePanelClasses.push('pointerEventsActive')\n        } \n        else if (this.props.hideSidePanel && this.state.sidePanelClasses !== ['sidePanel', 'pointerEventsInactive']) {\n            this.state.sidePanelClasses.splice(-1, 1)\n            this.state.sidePanelClasses.push('pointerEventsInactive')\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n        <MuiThemeProvider muiTheme={getMuiTheme(darkBaseTheme)}>\n            {/* <IconButton class='sideNavButton'><NavigationClose /></IconButton> */}\n            <div >\n                <Fade in={!this.props.hideSidePanel} timeout={1000}>\n                    <Paper className={this.state.sidePanelClasses.join(' ')} >\n                        <AppBar className={classes.appBar} title={this.state.titleBarTitle} iconElementLeft={(\n                            <IconButton color=\"inherit\" aria-label=\"Menu\" \n                                aria-owns={this.state.anchorEl ? 'simple-menu' : undefined}\n                                aria-haspopup=\"true\" \n                                onClick={this.menuClick}>\n                                <MenuIcon />\n                            </IconButton>)} \n                        >\n                        <Menu id=\"simple-menu\" anchorEl={this.state.anchorEl} open={Boolean(this.state.anchorEl)} onChange={this.handleClose}>\n                            <MenuItem onClick={this.handleClose('add')}>Add</MenuItem>\n                            <MenuItem onClick={this.handleClose('remove')}>Remove</MenuItem>\n                        </Menu>\n                        </AppBar>\n                        <h2>{this.state.configTitle}</h2>\n                        <h3>centerpoint coords: {this.state.centerpointCoordinates}</h3>\n                        <h3>click coords: {this.state.clickCoordinates}</h3>\n                    </Paper>\n                </Fade>\n            </div>\n        </MuiThemeProvider>\n        );\n    }\n}\nSidePanel.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\nexport default withStyles(styles)(SidePanel);","import React, { Component } from 'react'\n//import { loadModules } from 'esri-loader'\nimport MapSearch from '../MapSearch/MapSearch'\nimport SidePanel from '../../molecules/SidePanel'\nimport './MapOverlayPanel.css'\nimport Grid from '@material-ui/core/Grid'\nclass MapOverlayPanel extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    }\n  } \n  setProjectCallback = (value) =>{\n    //this.setState({project:value})\n    console.log(this.state.project)\n    this.props.projectCallback(value)\n  }\n  setPhaseCallback = (value) =>{\n    //this.setState({phase:value})\n    console.log(this.state.phase)\n    this.props.phaseCallback(value)\n  }\n  componentDidUpdate = () => {\n  }\n  render() {\n    return (\n      <div className=\"mapOverlayPanel\">\n        <Grid\n          container\n          spacing={10}\n          alignItems=\"center\"\n          direction=\"row\"\n          justify=\"center\"\n        >\n          <MapSearch \n            view={this.props.view} \n            resultPinDragable={true}\n          />\n          <SidePanel ref=\"sidePanel\" \n            hideSidePanel={this.props.hideSidePanel} \n          />\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default MapOverlayPanel","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\n\nconst styles = theme => ({\n    parentDiv: {\n        width: '100%',\n        height : '100%'\n    },\n    list: {\n        width: '100%',\n        height : '100%',\n        backgroundColor: theme.palette.background.paper,\n        position: 'relative',\n        overflow: 'auto',\n    },\n    listSection: {\n        backgroundColor: 'inherit',\n    },\n    ul: {\n        backgroundColor: 'inherit',\n        padding: 0,\n    },\n    subHeader: {\n        fontSize:'2rem',\n        backgroundColor:'#E8E8E8'\n    },\n});\n\nclass PopUp extends React.Component {\n    componentDidUpdate = () => {\n        console.log('componentDidUpdate')\n    }\n    generate = (element)=> {\n        return [0, 1, 2, 3, 4, 5, 6].map(value =>\n            React.cloneElement(element, {\n            key: value,\n            }),\n        );\n    }\n    render(props) {\n      const { classes } = this.props;\n      const self = this\n      console.log('popupRender');\n      const popupData = {}\n      popupData.parcelData = {'label': 'Parcel Data:', 'data':self.props.data}\n    //   popupData.realEstate = {'label': 'Real Estate Data:', 'data':self.props.realEstateData}\n      console.log('popupData: ' + JSON.stringify(popupData))\n      console.log('classes.subHeader: ' + JSON.stringify(classes.subHeader))\n      //   Object.keys(popupData).map(type => {\n    //     console.log('label: ' + popupData[type].label)\n    //     console.log('data: ' + JSON.stringify(popupData[type].data))\n    //     // if (self.props.popupData[type].data){\n    //     //   Object.keys(self.props.popupData[type].data).map(item => {\n    //     //       console.log('item: ' + item);\n    //     //       console.log('self.props.popupData[type].data: ' + self.props.popupData[type].data[item])\n    //     //   })\n    //     // }  \n    //   })\n      return (\n        <div className={classes.parentDiv}>\n            <List className={classes.list} subheader={<li />}>\n                {Object.keys(popupData).map(type => (\n                    //console.log('popupData[type].label: ' + popupData[type].label)\n                    <li key={`section-${popupData[type].label}`} className={classes.listSection}>\n                        {JSON.stringify(popupData[type].data) != '{}' &&\n                            <ul className={classes.ul}>\n                                <ListSubheader disableGutters disableSticky className={classes.subHeader}>{`${popupData[type].label}`}</ListSubheader>\n                                {Object.keys(popupData[type].data).map(item => (\n                                <ListItem key={`item-${popupData[type].label}-${item}`}>\n                                    <ListItemText primary={`${item} : ${popupData[type].data[item]}`} />\n                                </ListItem>\n                                ))}\n                            </ul>\n                        }\n                    </li>\n                ))}\n                {/* {headerLabels.map(sectionId => (\n                    <li key={`section-${sectionId}`} className={classes.listSection}>\n                        <ul className={classes.ul}>\n                            <ListSubheader>{`${sectionId}`}</ListSubheader>\n                            {[0, 1, 2].map(item => (\n                            <ListItem key={`item-${sectionId}-${item}`}>\n                                <ListItemText primary={`Item ${item}`} />\n                            </ListItem>\n                            ))}\n                        </ul>\n                    </li>\n                ))}\n                {Object.keys(self.props.popupData).map(type => (\n                    <li key={`section-${type.label}`} className={classes.listSection}>\n                        <ul className={classes.ul}>\n                            <ListSubheader>{`${type.label}`}</ListSubheader>\n                            {Object.keys(type.data).map.map(item => (\n                            <ListItem key={`item-${type.label}-${item.key}`}>\n                                <ListItemText primary={`${item.key} ${item.value}`} />\n                            </ListItem>\n                            ))}\n                        </ul>\n                    </li>\n                ))} */}\n            </List>\n        </div>\n      );\n    }\n  }\n  PopUp.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };  \nexport default withStyles(styles)(PopUp)","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport EsriLoaderReact from 'esri-loader-react'\nimport { loadModules } from 'esri-loader'\n// import axios from 'axios'\nimport MapOverlayPanel from '../molecules/MapOverlayPanel/MapOverlayPanel'\nimport PopUp from '../molecules/PopUp/PopUp'\nimport './ReactMap.css'\n\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateMapclickCoordinates, updateCenterpointCoordinates } from '../../actions'\n\n\nclass ReactMap extends React.PureComponent {\n  constructor(props){\n    super(props)\n    this.state = {\n      ctrlKey: false\n      , mapView: null\n      , hideSidePanel: true\n      // , parcelData: null\n      , realEstateData: null\n    }\n    this.mapClick = this.mapClick.bind(this);\n    this.loadMap = this.loadMap.bind(this);\n  }\n  componentDidMount(){\n    document.addEventListener('keydown', keyDown);\n    document.addEventListener('keyup', keyUp);\n    const self = this\n    function keyDown(e) {\n      if (e.ctrlKey&&!self.state.ctrlKey){\n        self.setState({ctrlKey: true})\n      }\n    }\n    function keyUp(e) {\n      if (self.state.ctrlKey){self.setState({ctrlKey: false})}\n    }\n  }\n  loadMap = ({loadedModules: [Map, MapView, FeatureLayer, GraphicsLayer, watchUtils], containerNode}) => {\n    const self = this;\n    \n    let map = new Map({basemap: 'satellite'})\n    \n    let mv = new MapView({\n      container: containerNode\n      , center: [-78.90392, 35.99702]\n      , zoom: 18\n      , map: map\n    }).when((function(mapView){\n        self.setState({mapView:mapView})\n        mapView.on('click', self.mapClick)\n\n        mapView.watch('extent', self.mapCenter);\n\n        mapView.popup.highlightEnabled = false;\n        mapView.popup.actions = {}\n        mapView.popup.watch('visible', function(e){\n          if(e){self.setReactPopupContent()}\n        })\n    }));\n  }\n  \n  setReactPopupContent = () => {\n    const self = this\n    \n    let puNode = document.createElement(\"div\");\n    self.state.mapView.popup.content = puNode\n    \n    ReactDOM.render(\n      <PopUp data={self.state.data} />,\n      puNode\n    );\n    //self.state.mapView.popup.open();\n  }\n  mapClick = (e) => {\n      console.log('quit clicking me mapPoint: ' + JSON.stringify(e.mapPoint));\n      const coords = { lat: e.mapPoint.latitude.toFixed(5).toString(), lon: e.mapPoint.longitude.toFixed(5).toString()};\n      this.props.updateMapclickCoordinates(coords);\n  }\n  mapCenter = (e) => {\n    //console.log('quit clicking me mapPoint: ' + JSON.stringify(e.mapPoint));\n    const coords = { lat: e.center.latitude, lon: e.center.longitude };\n    // setTimeout(function(){ \n    //   console.log('setTimeOut: ', e);\n    //   //this.props.updateCenterpointCoordinates(coords);// .updateCenterpointCoordinates(coords);\n    // }, 500);  \n    console.log('mapCenter e: ', e);\n    this.props.updateCenterpointCoordinates(coords);// .updateCenterpointCoordinates(coords);\n    \n    // const coordString = e.mapPoint.latitude.toFixed(5).toString() + \" \" + e.mapPoint.longitude.toFixed(5).toString();\n  }\n  \n  \n  render() {\n\n    //var fl = new FeatureLayer(url);\n\n    const options = {\n      url: 'https://js.arcgis.com/4.10/'\n    };\n\n    return (\n      <div className=\"ReactScene\">\n        <EsriLoaderReact \n          options={options}\n          modulesToLoad={['esri/Map', 'esri/views/MapView','esri/layers/FeatureLayer', 'esri/layers/GraphicsLayer', 'esri/core/watchUtils']}    \n          onReady={this.loadMap}\n        />\n        <MapOverlayPanel \n          view={this.state.mapView} \n          resultPinDragable={true}\n          hideSidePanel={false} \n          hideSidePanel_MapOverlay={this.state.hideSidePanel} \n        />\n        \n      </div>\n    );\n  }\n}\nReactMap.propTypes = {\n  updateMapclickCoordinates: PropTypes.func.isRequired,\n  updateCenterpointCoordinates: PropTypes.func.isRequired\n};\n\nexport default connect(null, { updateMapclickCoordinates, updateCenterpointCoordinates })(ReactMap);","import { FETCH_DATA } from '../actions/types';\nimport { UPDATE_MAPCLICK_COORDINATES, UPDATE_CENTERPOINT_COORDINATES } from '../actions/types';\nimport { SET_CONFIG } from '../actions/types';\n\n\nexport const updateMapclickCoordinates = (coordData) => {\n    \n    return dispatch => {\n        dispatch({\n            type: UPDATE_MAPCLICK_COORDINATES,\n            payload: coordData,\n        });\n    };\n};\nexport const updateCenterpointCoordinates = (coordData) => {\n    \n    return dispatch => {\n        dispatch({\n            type: UPDATE_CENTERPOINT_COORDINATES,\n            payload: coordData,\n        });\n    };\n}\nexport const setConfig = (config) => {\n    return dispatch => {\n        dispatch({\n            type: SET_CONFIG,\n            payload: config,\n        });\n    };\n}\n// default function to display redux action format\nexport function defaultFunction() {\n    console.log('defaultFunction');\n    let testVar = 'Hello';\n\n    // action object format being return to a reducer\n    return {\n        type: FETCH_DATA,\n        payload: testVar\n    }\n}","const config = {\n    title: 'test title',\n}\nexport default config;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport { defaultFunction, setConfig } from './actions';\nimport ReactMap from './components/organisms/ReactMap';\n\nimport config from './App.config'\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      config: config\n    }\n  }\n  componentDidMount() {\n    // call default function to display redux operation\n    this.props.defaultFunction();\n    this.props.setConfig(config);// .setConfig(config);\n  }\n  render() {\n    console.log('render config: ', config);\n    return (\n      <div>\n        {/* <ReactScene /> */}\n        <ReactMap config={this.state.config}/>\n      </div>\n    );\n  }\n}\n\n// function to convert the global state obtained from redux to local props\nfunction mapStateToProps(state) {\n  return {\n    default: state.default\n  };\n}\n\nexport default connect(mapStateToProps, { defaultFunction, setConfig })(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}